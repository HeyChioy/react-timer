{"version":3,"sources":["../src/Timer.js"],"names":["Timer","onCall","interval","timer","clearInterval","_onCall","_interval","setInterval","callback","timeout","setTimeout","props","state","setState","Component","PropTypes","number","isRequired","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,K;;;;;8BACWC,M,EAAwB;AAAA,gBAAhBC,QAAgB,uEAAL,GAAK;;AACjC,iBAAKC,KAAL,GAAaC,cAAc,KAAKD,KAAnB,CAAb,GAAyC,IAAzC;AACA,gBAAME,UAAU,KAAKJ,MAAL,IAAeA,MAA/B;AACA,gBAAMK,YAAY,KAAKJ,QAAL,IAAiBA,QAAnC;AACA,iBAAKC,KAAL,GAAaE,UAAUE,YAAY,YAAM;AACrCF;AACH,aAFsB,EAEpBC,SAFoB,CAAV,GAEG,CAFhB;AAGA,iBAAKJ,QAAL,GAAgBI,SAAhB;AACA,iBAAKL,MAAL,GAAcI,OAAd;AACH;;;+BACa;AACVD,0BAAc,KAAKD,KAAnB;AACH;;;8BACYK,Q,EAA0B;AAAA,gBAAhBC,OAAgB,uEAAN,IAAM;;AACnCC,uBAAW,YAAM;AACbF;AACH,aAFD,EAEGC,OAFH;AAGH;;;AACD,mBAAYE,KAAZ,EAAmB;AAAA;;AAAA,kHACTA,KADS;;AAAA,YAEPV,MAFO,GAEoBU,KAFpB,CAEPV,MAFO;AAAA,8BAEoBU,KAFpB,CAECT,QAFD;AAAA,YAECA,QAFD,mCAEY,GAFZ;;AAGf,cAAKU,KAAL,GAAa;AACTT,mBAAO,CADE;AAETF,0BAFS;AAGTC;AAHS,SAAb;AAHe;AAQlB;;;;6CACoB;AAAA;;AACjB,iBAAKW,QAAL,CAAc;AACVV,uBAAOI,YAAY,YAAM;AACrB,2BAAKK,KAAL,CAAWX,MAAX;AACH,iBAFM,EAEJ,KAAKW,KAAL,CAAWV,QAFP;AADG,aAAd;AAKH;;;+CACsB;AACnBE,0BAAc,KAAKQ,KAAL,CAAWT,KAAzB;AACH;;;iCACQ;AACL,mBACI,0CADJ;AAGH;;;;EA1Ce,gBAAMW,S;;AA6C1Bd,MAAMe,SAAN,GAAkB;AACdb,cAAU,oBAAUc,MAAV,CAAiBC,UADb;AAEdhB,YAAQ,oBAAUiB,IAAV,CAAeD;AAFT,CAAlB;;kBAKejB,K","file":"Timer.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Timer extends React.Component {\n    static start(onCall, interval = 100) {\n        this.timer ? clearInterval(this.timer) : null;\n        const _onCall = this.onCall || onCall;\n        const _interval = this.interval || interval;\n        this.timer = _onCall ? setInterval(() => {\n            _onCall();\n        }, _interval) : 0;\n        this.interval = _interval;\n        this.onCall = _onCall;\n    }\n    static stop() {\n        clearInterval(this.timer);\n    }\n    static delay(callback, timeout = 1000) {\n        setTimeout(() => {\n            callback()\n        }, timeout);\n    };\n    constructor(props) {\n        super(props);\n        const { onCall, interval = 100 } = props;\n        this.state = {\n            timer: 0,\n            onCall,\n            interval,\n        };\n    }\n    componentWillMount() {\n        this.setState({\n            timer: setInterval(() => {\n                this.state.onCall();\n            }, this.state.interval),\n        });\n    }\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n    render() {\n        return (\n            <div />\n        );\n    }\n}\n\nTimer.PropTypes = {\n    interval: PropTypes.number.isRequired,\n    onCall: PropTypes.func.isRequired,\n};\n\nexport default Timer;\n"]}